{"ast":null,"code":"var _jsxFileName = \"/Users/yogeshthakur/Rule Engine/frontend/src/components/RuleList.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n\n// const RuleList = () => {\n//     const [rules, setRules] = useState([]);\n\n//     useEffect(() => {\n//         const fetchRules = async () => {\n//             try {\n//                 const response = await axios.get('http://localhost:5001/api/rules');\n//                 setRules(response.data);\n//             } catch (error) {\n//                 console.error('Error fetching rules:', error);\n//             }\n//         };\n\n//         fetchRules();\n//     }, []);\n\n//     return (\n//         <div>\n//             <h2>Rules List</h2>\n//             <ul>\n//                 {rules.map((rule) => (\n//                     <li key={rule._id}>\n//                         {rule.ruleExpression}\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// };\n\n// export default RuleList;\n\n// src/components/RuleList.js\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RuleList() {\n  _s();\n  const [rules, setRules] = useState([]);\n  const [newRule, setNewRule] = useState('');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    // Fetch rules when component loads\n    fetchRules();\n  }, []);\n  const fetchRules = async () => {\n    try {\n      const response = await axios.get('/api/rules');\n      setRules(response.data);\n    } catch (error) {\n      console.error('Error fetching rules:', error);\n    }\n  };\n  const handleAddRule = async () => {\n    // Check if the new rule is not empty\n    if (newRule.trim() === '') {\n      setError('Rule cannot be empty'); // Display error message\n      return;\n    }\n    try {\n      await axios.post('/api/rules', {\n        rule: newRule\n      });\n      setNewRule(''); // Clear input after adding rule\n      setError(''); // Clear any previous error\n      fetchRules(); // Refresh the rule list\n    } catch (error) {\n      console.error('Error adding rule:', error);\n    }\n  };\n  const handleDeleteRule = async id => {\n    try {\n      await axios.delete(`/api/rules/${id}`);\n      fetchRules(); // Refresh rule list after deletion\n    } catch (error) {\n      console.error('Error deleting rule:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rule-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Rules List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newRule,\n        onChange: e => setNewRule(e.target.value),\n        placeholder: \"Enter new rule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddRule,\n        children: \"Add Rule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: rules.map(rule => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [rule.rule, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteRule(rule._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)]\n      }, rule._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(RuleList, \"uojyd0JMXX4H0GVSs6K7jeckZxw=\");\n_c = RuleList;\nexport default RuleList;\nvar _c;\n$RefreshReg$(_c, \"RuleList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","RuleList","_s","rules","setRules","newRule","setNewRule","error","setError","fetchRules","response","get","data","console","handleAddRule","trim","post","rule","handleDeleteRule","id","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","_id","_c","$RefreshReg$"],"sources":["/Users/yogeshthakur/Rule Engine/frontend/src/components/RuleList.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n\n\n// const RuleList = () => {\n//     const [rules, setRules] = useState([]);\n\n\n//     useEffect(() => {\n//         const fetchRules = async () => {\n//             try {\n//                 const response = await axios.get('http://localhost:5001/api/rules');\n//                 setRules(response.data);\n//             } catch (error) {\n//                 console.error('Error fetching rules:', error);\n//             }\n//         };\n\n\n//         fetchRules();\n//     }, []);\n\n\n//     return (\n//         <div>\n//             <h2>Rules List</h2>\n//             <ul>\n//                 {rules.map((rule) => (\n//                     <li key={rule._id}>\n//                         {rule.ruleExpression}\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// };\n\n\n// export default RuleList;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// src/components/RuleList.js\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction RuleList() {\n  const [rules, setRules] = useState([]);\n  const [newRule, setNewRule] = useState('');\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    // Fetch rules when component loads\n    fetchRules();\n  }, []);\n\n  const fetchRules = async () => {\n    try {\n      const response = await axios.get('/api/rules');\n      setRules(response.data);\n    } catch (error) {\n      console.error('Error fetching rules:', error);\n    }\n  };\n\n  const handleAddRule = async () => {\n    // Check if the new rule is not empty\n    if (newRule.trim() === '') {\n      setError('Rule cannot be empty'); // Display error message\n      return;\n    }\n\n    try {\n      await axios.post('/api/rules', { rule: newRule });\n      setNewRule(''); // Clear input after adding rule\n      setError('');   // Clear any previous error\n      fetchRules();   // Refresh the rule list\n    } catch (error) {\n      console.error('Error adding rule:', error);\n    }\n  };\n\n  const handleDeleteRule = async (id) => {\n    try {\n      await axios.delete(`/api/rules/${id}`);\n      fetchRules(); // Refresh rule list after deletion\n    } catch (error) {\n      console.error('Error deleting rule:', error);\n    }\n  };\n\n  return (\n    <div className=\"rule-list\">\n      <h2>Rules List</h2>\n\n      {/* Input for new rule */}\n      <div>\n        <input\n          type=\"text\"\n          value={newRule}\n          onChange={(e) => setNewRule(e.target.value)}\n          placeholder=\"Enter new rule\"\n        />\n        <button onClick={handleAddRule}>Add Rule</button>\n      </div>\n\n      {/* Display error if rule is empty */}\n      {error && <p className=\"error\">{error}</p>}\n\n      {/* Display rules */}\n      <ul>\n        {rules.map((rule) => (\n          <li key={rule._id}>\n            {rule.rule}\n            <button onClick={() => handleDeleteRule(rule._id)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default RuleList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}